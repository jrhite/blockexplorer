{"version":3,"sources":["Title.js","AccountDetailCard.js","Account.js","utils/utils.js","BlockDetailCard.js","Block.js","CongestionChart.js","NetworkStatusCard.jsx","Blocks.js","listItems.js","FeeInfo.js","GasInfo.js","TransactionDetailCard.jsx","Transaction.js","utils/BidirectionalMap.js","Dashboard.js","App.tsx","theme.tsx","index.tsx"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","AccountDetailCard","accountInfo","accountBalanceDisplay","ethers","from","formatEther","balance","round","Grid","container","spacing","textoverflow","style","overflow","item","xs","justifyContent","noWrap","address","txnCount","useStyles","makeStyles","theme","paper","padding","display","flexDirection","fixedHeight","height","Account","provider","accountAddr","useParams","classes","fixedHeightPaper","clsx","useState","undefined","setAccountInfo","useEffect","a","accountPromises","push","getBalance","getTransactionCount","Promise","all","_accountInfo","fetchAccountInfo","md","lg","Paper","className","middleEllipsis","str","length","substr","BlockDetailCard","block","Object","keys","baseFeePerGasDisplay","formatUnits","baseFeePerGas","burnedFee","gasUsed","mul","burnedFeeDisplay","number","hash","parentHash","Date","timestamp","toISOString","split","difficulty","Link","RouterLink","to","miner","transactions","gasLimit","toNumber","Block","blockNumber","setBlock","getBlockWithTransactions","parseInt","fetchBlock","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","transaction","transactionIndex","type","nonce","CustomTooltip","active","payload","label","congestionLevel","CongestionChart","blocks","reverse","useTheme","ResponsiveContainer","width","LineChart","data","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","palette","text","secondary","YAxis","tickCount","domain","Label","angle","position","textAnchor","fill","primary","Tooltip","content","Line","stackId","entry","index","Cell","NetworkStatusCard","gasPriceEstimate","latestBlock","gasPriceEstimateDisplay","Box","py","Divider","error","dark","success","fontWeight","TARGET_GAS_LIMIT","calculateCongestionlevel","previousBlockGasUsed","Math","max","min","SCALE_FACTOR","Blocks","setBlocks","setGasPriceEstimate","getBlockNumber","getGasPrice","_latestBlockNum","_gasPriceEstimate","blockPromises","i","getBlock","_blocks","sort","b","pop","fetchNetworkStatus","ListItemLink","icon","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","mainListItems","FeeInfo","totalTxnFee","effectiveGasPrice","totalTxnFeeDisplay","tipFee","sub","tipFeeDisplay","effectiveGasPriceDisplay","burnedFeePercentageOfTotalFeeDisplay","div","burnedFeeValue","toUnsafeFloat","tipFeeValue","pieData","value","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","innerRadius","paddingAngle","grey","alignItems","textalign","pt","marginBottom","GasInfo","gasLimitDisplay","gasUsedDisplay","gasPercentageUsedDisplay","maxTipFeePerGasDisplay","maxPriorityFeePerGas","maxFeePerGasDisplay","maxFeePerGas","TransactionDetailCard","valueDisplay","contractAddress","confirmations","status","Transaction","txnHash","setTransaction","transactionPromises","getTransaction","getTransactionReceipt","transactionInfo","_transaction","fetchTransaction","BidirectionalMap","fwdMap","revMap","this","reduce","acc","cur","key","entries","Copyright","href","getFullYear","root","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","paddingTop","paddingBottom","chainIdNetworkBiMap","Dashboard","drawerOpen","setDrawerOpen","settingsMenuAnchorEl","setSettingsMenuAnchorEl","InfuraProvider","process","setProvider","networkName","setNetworkName","handleSettingsMenuClose","handleNetworkSelection","event","_networkName","target","innerText","toLowerCase","CssBaseline","AppBar","Toolbar","IconButton","edge","onClick","currentTarget","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","chainId","MenuItem","Drawer","List","Container","maxWidth","exact","path","App","basename","createTheme","main","red","A400","ReactDOM","render","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.b01998fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as ethers from \"ethers\";\nimport Title from \"./Title\";\n\nexport default function AccountDetailCard({ accountInfo }) {\n  if (typeof accountInfo === \"undefined\") {\n    return <></>;\n  }\n\n  const accountBalanceDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatEther(accountInfo.balance)\n    ).round(6) + \" ETH\";\n\n  return (\n    <>\n      <Title>Account Details</Title>\n      <Grid\n        container\n        spacing={0}\n        textoverflow=\"ellipsis\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Address</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {accountInfo.address}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Num Txns</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{accountInfo.txnCount}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Balance</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{accountBalanceDisplay}</Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport AccountDetailCard from \"./AccountDetailCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 150,\n  },\n}));\n\nexport default function Account(props) {\n  const { provider } = props;\n  const { accountAddr } = useParams();\n\n  const classes = useStyles(props);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const [accountInfo, setAccountInfo] = useState(undefined);\n\n  useEffect(async () => {\n    const fetchAccountInfo = async () => {\n      const accountPromises = [];\n      accountPromises.push(provider.getBalance(accountAddr));\n      accountPromises.push(provider.getTransactionCount(accountAddr));\n\n      const _accountInfo = await Promise.all(accountPromises);\n\n      setAccountInfo({\n        address: accountAddr,\n        balance: _accountInfo[0],\n        txnCount: _accountInfo[1],\n      });\n    };\n\n    fetchAccountInfo();\n  }, [provider]);\n\n  if (typeof accountInfo === \"undefined\") {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        {/* Account Detail Card */}\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper className={fixedHeightPaper}>\n            <AccountDetailCard accountInfo={accountInfo} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","export function middleEllipsis(str) {\n  if (typeof str === \"undefined\" || str === null) {\n    return \"\";\n  }\n\n  if (str.length < 16) {\n    return str;\n  }\n\n  return str.substr(0, 8) + \"...\" + str.substr(str.length - 6, str.length);\n}\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as ethers from \"ethers\";\n\nimport { middleEllipsis } from \"./utils/utils\";\nimport Title from \"./Title\";\n\nexport default function BlockDetailCard({ block }) {\n  if (typeof block === \"undefined\" || Object.keys(block).length === 0) {\n    return <></>;\n  }\n\n  const baseFeePerGasDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatUnits(block.baseFeePerGas, \"gwei\")\n    ).round(3) + \" gwei\";\n\n  const burnedFee = block.gasUsed.mul(block.baseFeePerGas);\n  const burnedFeeDisplay =\n    ethers.FixedNumber.from(ethers.utils.formatEther(burnedFee)).round(6) +\n    \" ETH\";\n\n  return (\n    <>\n      <Title>Block Details</Title>\n      <Grid\n        container\n        spacing={0}\n        textoverflow=\"ellipsis\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Number</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{block.number}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Hash</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {middleEllipsis(block.hash)}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Parent Hash</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {middleEllipsis(block.parentHash)}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Timestamp</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {new Date(block.timestamp * 1000).toISOString().split(\".\")[0] + \"Z\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Difficulty</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {block.difficulty}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Miner Addr</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            <Link component={RouterLink} to={`/account/${block.miner}`}>\n              {middleEllipsis(block.miner)}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Num Txns</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {block.transactions.length}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Limit</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {block.gasLimit.toNumber()}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Used</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {block.gasUsed.toNumber()}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Base Fee (per Gas)</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {baseFeePerGasDisplay}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Burned Fee</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {burnedFeeDisplay}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport * as ethers from \"ethers\";\n\nimport { middleEllipsis } from \"./utils/utils\";\nimport BlockDetailCard from \"./BlockDetailCard\";\nimport Title from \"./Title\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nexport default function Block(props) {\n  const { provider } = props;\n  const { blockNumber } = useParams();\n\n  const [block, setBlock] = useState(undefined);\n\n  const classes = useStyles(props);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  useEffect(async () => {\n    const fetchBlock = async () => {\n      setBlock(await provider.getBlockWithTransactions(parseInt(blockNumber)));\n    };\n\n    fetchBlock();\n  }, [provider]);\n\n  if (typeof block === \"undefined\") {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper className={fixedHeightPaper}>\n            <BlockDetailCard block={block} />\n          </Paper>\n        </Grid>\n        {/* Block Transactions */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Title>Block Transactions</Title>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Hash</TableCell>\n                  <TableCell>Txn Index</TableCell>\n                  <TableCell>Txn Type</TableCell>\n                  <TableCell>To</TableCell>\n                  <TableCell>From</TableCell>\n                  <TableCell>Value</TableCell>\n                  <TableCell>Nonce</TableCell>\n                  <TableCell align=\"right\">Gas Limit</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {block.transactions.map((transaction) => (\n                  <TableRow key={transaction.hash}>\n                    <TableCell>\n                      <Link\n                        component={RouterLink}\n                        to={`/transaction/${transaction.hash}`}\n                      >\n                        {middleEllipsis(transaction.hash)}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {parseInt(transaction.transactionIndex)}\n                    </TableCell>\n                    <TableCell>\n                      {parseInt(transaction.type, 16) === 0\n                        ? \"0 (Legacy)\"\n                        : parseInt(transaction.type, 16) === 2\n                        ? \"2 (EIP 1559)\"\n                        : parseInt(transaction.type, 16)}\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        component={RouterLink}\n                        to={`/account/${transaction.to}`}\n                      >\n                        {middleEllipsis(transaction.to)}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        component={RouterLink}\n                        to={`/account/${transaction.from}`}\n                      >\n                        {middleEllipsis(transaction.from)}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {ethers.BigNumber.from(transaction.gasLimit).toNumber()}\n                    </TableCell>\n                    <TableCell>\n                      {ethers.BigNumber.from(transaction.nonce).toNumber()}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {ethers.BigNumber.from(transaction.gasLimit).toNumber()}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  CartesianGrid,\n  Cell,\n  Label,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nimport Title from \"./Title\";\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">{`Block ${payload[0].payload.number}`}</p>\n        <p className=\"intro\">{`Timestamp ${\n          new Date(payload[0].payload.timestamp * 1000)\n            .toISOString()\n            .split(\".\")[0]\n        }`}</p>\n        <p className=\"desc\">{`Congestion Level ${payload[0].payload.congestionLevel}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default function CongestionChart(props) {\n  const blocks = props.blocks ? props.blocks.reverse() : props.blocks;\n\n  const theme = useTheme();\n\n  return (\n    <>\n      <Title>Network Congestion</Title>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={blocks}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timestamp\" stroke={theme.palette.text.secondary} />\n          <YAxis\n            tickCount={3}\n            type=\"number\"\n            domain={[0, 10]}\n            stroke={theme.palette.text.secondary}\n          >\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}\n            >\n              Congestion Level\n            </Label>\n          </YAxis>\n          <Tooltip content={<CustomTooltip />} />\n          {/* <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          /> */}\n          <Line dataKey=\"congestionLevel\" stackId=\"a\" fill=\"#82ca9d\">\n            {blocks.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={entry.congestionLevel >= 0 ? \"#82ca9d\" : \"#d62728\"}\n              />\n            ))}\n          </Line>\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as ethers from \"ethers\";\n\nimport { middleEllipsis } from \"./utils/utils\";\nimport Title from \"./Title\";\n\nexport default function NetworkStatusCard({ blocks, gasPriceEstimate }) {\n  if (\n    typeof blocks === \"undefined\" ||\n    !blocks.length > 0 ||\n    typeof gasPriceEstimate === \"undefined\"\n  ) {\n    return <></>;\n  }\n\n  const theme = useTheme();\n\n  const latestBlock = blocks[0];\n\n  const baseFeePerGasDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatUnits(latestBlock.baseFeePerGas, \"gwei\")\n    ).round(3) + \" gwei\";\n\n  const gasPriceEstimateDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatUnits(gasPriceEstimate, \"gwei\")\n    ).round(3) + \" gwei\";\n\n  return (\n    <>\n      <Title>Network Status</Title>\n      <Grid\n        container\n        spacing={0}\n        textoverflow=\"ellipsis\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Latest Block</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">\n            <Link component={RouterLink} to={`/block/${latestBlock.number}`}>\n              {latestBlock.number}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Hash</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {middleEllipsis(latestBlock.hash)}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Parent Hash</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {middleEllipsis(latestBlock.parentHash)}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Timestamp</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {new Date(latestBlock.timestamp * 1000).toISOString().split(\".\")[0]}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Num Txns</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {latestBlock.transactions.length}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Base Fee (per Gas)</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {baseFeePerGasDisplay}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Limit</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {latestBlock.gasLimit.toNumber()}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Used</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {latestBlock.gasUsed.toNumber()}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Box py={2}>\n            <Divider />\n          </Box>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Price Estimate</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{gasPriceEstimateDisplay}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Congestion Level</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography\n            style={{\n              color:\n                latestBlock.congestionLevel > 5\n                  ? theme.palette.error.dark\n                  : theme.palette.success.dark,\n              fontWeight: \"bold\",\n            }}\n          >\n            {latestBlock.congestionLevel}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { middleEllipsis } from \"./utils/utils\";\n\nimport CongestionChart from \"./CongestionChart\";\nimport NetworkStatusCard from \"./NetworkStatusCard\";\nimport Title from \"./Title\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst TARGET_GAS_LIMIT = 15 * 10 ** 6;\n// fetch desired number of blocks + 1, to that congestion level can be calculated\nconst NUM_BLOCKS = 30 + 1;\n\n// scale factor for congestion level\n// 0 = block used 0 gas (0% congestion)\n// 10 = block used 30 mil gas, the max gas limit (100% congestion)\nconst SCALE_FACTOR = 5;\nfunction calculateCongestionlevel(previousBlockGasUsed) {\n  let congestionLevel =\n    Math.round((previousBlockGasUsed / TARGET_GAS_LIMIT) * SCALE_FACTOR * 100) /\n    100;\n\n  congestionLevel = Math.max(0, Math.min(congestionLevel, SCALE_FACTOR * 2));\n\n  return congestionLevel;\n}\n\nexport default function Blocks(props) {\n  const { provider } = props;\n\n  const classes = useStyles(props);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const [blocks, setBlocks] = useState(undefined);\n  const [gasPriceEstimate, setGasPriceEstimate] = useState();\n\n  useEffect(async () => {\n    const fetchNetworkStatus = async () => {\n      const [_latestBlockNum, _gasPriceEstimate] = await Promise.all([\n        provider.getBlockNumber(),\n        provider.getGasPrice(),\n      ]);\n\n      const blockPromises = [];\n      for (let i = _latestBlockNum - NUM_BLOCKS; i <= _latestBlockNum; i++) {\n        blockPromises.push(provider.getBlock(i));\n      }\n\n      const _blocks = await Promise.all(blockPromises);\n\n      // sort by block.number in descending order\n      _blocks.sort(function (a, b) {\n        return b.number - a.number;\n      });\n\n      for (let i = _blocks.length - 2; i >= 0; i--) {\n        _blocks[i].congestionLevel = calculateCongestionlevel(\n          _blocks[i + 1].gasUsed\n        );\n      }\n\n      // remove extra block that was used for calculating congestion levels\n      _blocks.pop();\n\n      setGasPriceEstimate(_gasPriceEstimate);\n      setBlocks(_blocks);\n    };\n\n    fetchNetworkStatus();\n  }, [provider]);\n\n  if (typeof blocks === \"undefined\") {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={5} lg={4}>\n          <Paper className={fixedHeightPaper}>\n            <NetworkStatusCard\n              blocks={blocks}\n              gasPriceEstimate={gasPriceEstimate}\n            />\n          </Paper>\n        </Grid>\n        {/* Network Congestion Chart */}\n        <Grid item xs={12} md={7} lg={8}>\n          <Paper className={fixedHeightPaper}>\n            <CongestionChart blocks={blocks} />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3}>\n        {/* Recent Blocks */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Title>Recent Blocks</Title>\n            <Table size=\"medium\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Number</TableCell>\n                  <TableCell>Hash</TableCell>\n                  <TableCell>Timestamp</TableCell>\n                  <TableCell>Gas Used</TableCell>\n                  <TableCell>Gas Limit</TableCell>\n                  <TableCell>Num Txns</TableCell>\n                  <TableCell align=\"right\">Miner Address</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {blocks &&\n                  blocks.map((block) => (\n                    <TableRow key={block.number}>\n                      <TableCell>\n                        <Link\n                          component={RouterLink}\n                          to={`/block/${block.number}`}\n                        >\n                          {block.number}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{middleEllipsis(block.hash)}</TableCell>\n                      <TableCell>\n                        {new Date(block.timestamp * 1000)\n                          .toISOString()\n                          .split(\".\")[0] + \"Z\"}\n                      </TableCell>\n                      <TableCell>{block.gasUsed.toNumber()}</TableCell>\n                      <TableCell>{block.gasLimit.toNumber()}</TableCell>\n                      <TableCell>{block.transactions.length}</TableCell>\n                      <TableCell align=\"right\">\n                        <Link\n                          component={RouterLink}\n                          to={`/account/${block.miner}`}\n                        >\n                          {middleEllipsis(block.miner)}\n                        </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nconst useStyles = makeStyles({});\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n  const classes = useStyles(props);\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemLink to=\"/\" primary=\"Dashboard\" icon={<DashboardIcon />} />\n    </ListItem>\n    {/* <ListItem button>\n      <ListItemLink to=\"/blocks\" primary=\"Blocks\" icon={<WidgetsIcon/>} />\n    </ListItem>\n    <ListItem button>\n      <ListItemLink to=\"/transactions\" primary=\"Transactions\" icon={<BarChartIcon/>} />\n    </ListItem>\n    <ListItem button>\n      <ListItemLink to=\"/accounts\" primary=\"Accounts\" icon={<PeopleIcon/>} />\n    </ListItem> */}\n  </div>\n);\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport { Pie, PieChart, ResponsiveContainer } from \"recharts\";\n\nimport * as ethers from \"ethers\";\n\nimport Title from \"./Title\";\n\nexport default function FeeInfo({ transaction, block }) {\n  const theme = useTheme();\n\n  const totalTxnFee = transaction.effectiveGasPrice.mul(transaction.gasUsed);\n\n  const totalTxnFeeDisplay =\n    ethers.FixedNumber.from(ethers.utils.formatEther(totalTxnFee)).round(6) +\n    \" ETH\";\n\n  const burnedFee = block.baseFeePerGas.mul(transaction.gasUsed);\n  const burnedFeeDisplay =\n    ethers.FixedNumber.from(ethers.utils.formatEther(burnedFee)).round(6) +\n    \" ETH\";\n\n  const tipFee = totalTxnFee.sub(burnedFee);\n  const tipFeeDisplay =\n    ethers.FixedNumber.from(ethers.utils.formatEther(tipFee)).round(6) + \" ETH\";\n\n  const effectiveGasPriceDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatUnits(transaction.effectiveGasPrice, \"gwei\")\n    ).round(3) + \" gwei\";\n\n  const burnedFeePercentageOfTotalFeeDisplay = burnedFee\n    .mul(100)\n    .div(totalTxnFee)\n    .toNumber();\n\n  const burnedFeeValue = ethers.FixedNumber.from(\n    ethers.utils.formatUnits(burnedFee, 10)\n  )\n    .round(0)\n    .toUnsafeFloat();\n  const tipFeeValue = ethers.FixedNumber.from(\n    ethers.utils.formatUnits(tipFee, 10)\n  )\n    .round(0)\n    .toUnsafeFloat();\n\n  const pieData = [\n    { value: burnedFeeValue, fill: theme.palette.error.dark },\n    { value: tipFeeValue, fill: theme.palette.primary.dark },\n  ];\n\n  return (\n    <>\n      <Title>Fee Info</Title>\n      <ResponsiveContainer height={100}>\n        <PieChart>\n          <Pie\n            dataKey=\"value\"\n            isAnimationActive={false}\n            data={pieData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={40}\n            innerRadius={20}\n            paddingAngle={7}\n            stroke={theme.palette.grey[\"A400\"]}\n          ></Pie>\n        </PieChart>\n      </ResponsiveContainer>\n\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"relative\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n          textalign=\"center\"\n          gutterBottom\n        >{`${burnedFeePercentageOfTotalFeeDisplay}% of total txn fee burned`}</Typography>\n      </Box>\n      <hr className=\"MuiDivider-root\" style={{ margin: \"10px 0px\" }} />\n      <Grid container spacing={0} pt={20}>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Effective Gas Price</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">\n            {effectiveGasPriceDisplay}\n          </Typography>\n        </Grid>\n      </Grid>\n      <hr className=\"MuiDivider-root\" style={{ margin: \"10px 0px\" }} />\n      <Grid container spacing={0} pt={20}>\n        <Grid item xs={12} md={12} lg={12} style={{ marginBottom: \"5px\" }}>\n          <Typography color=\"primary\" textalign=\"center\">\n            Fee Totals\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Burned Fee</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{burnedFeeDisplay}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Tip Fee</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{tipFeeDisplay}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Total Txn Fee</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{totalTxnFeeDisplay}</Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport { Pie, PieChart, ResponsiveContainer } from \"recharts\";\n\nimport * as ethers from \"ethers\";\n\nimport Title from \"./Title\";\n\nexport default function GasInfo({ transaction, block }) {\n  const theme = useTheme();\n\n  const gasLimitDisplay = transaction.gasLimit.toNumber();\n  const gasUsedDisplay = transaction.gasUsed.toNumber();\n\n  const gasPercentageUsedDisplay = transaction.gasUsed\n    .mul(100)\n    .div(transaction.gasLimit)\n    .toNumber();\n\n  const baseFeePerGasDisplay =\n    ethers.FixedNumber.from(\n      ethers.utils.formatUnits(block.baseFeePerGas, \"gwei\")\n    ).round(3) + \" gwei\";\n\n  const maxTipFeePerGasDisplay =\n    transaction.type === 2\n      ? ethers.FixedNumber.from(\n          ethers.utils.formatUnits(transaction.maxPriorityFeePerGas, \"gwei\")\n        ).round(3) + \" gwei\"\n      : \"N/A\";\n\n  const maxFeePerGasDisplay =\n    transaction.type === 2\n      ? ethers.FixedNumber.from(\n          ethers.utils.formatUnits(transaction.maxFeePerGas, \"gwei\")\n        ).round(3) + \" gwei\"\n      : \"N/A\";\n\n  const pieData = [\n    { value: gasUsedDisplay, fill: theme.palette.primary.dark },\n    {\n      value: gasLimitDisplay,\n      fill: theme.palette.grey[\"A400\"],\n    },\n  ];\n\n  return (\n    <>\n      <Title>Gas Info</Title>\n      <ResponsiveContainer height={100}>\n        <PieChart>\n          <Pie\n            dataKey=\"value\"\n            isAnimationActive={false}\n            data={pieData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={40}\n            innerRadius={20}\n            paddingAngle={7}\n            stroke={theme.palette.grey[\"A400\"]}\n          ></Pie>\n        </PieChart>\n      </ResponsiveContainer>\n\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"relative\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n          textalign=\"center\"\n          gutterBottom\n        >{`${gasPercentageUsedDisplay}% of gas limit used`}</Typography>\n      </Box>\n      <hr className=\"MuiDivider-root\" style={{ margin: \"10px 0px\" }} />\n      <Grid container spacing={0} pt={20}>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Limit</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{gasLimitDisplay}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Gas Used</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{gasUsedDisplay}</Typography>\n        </Grid>\n      </Grid>\n      <hr className=\"MuiDivider-root\" style={{ margin: \"10px 0px\" }} />\n      <Grid container spacing={0} pt={20}>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Base Fee (per Gas)</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography color=\"textPrimary\">{baseFeePerGasDisplay}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Max Tip Fee (per Gas)</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography\n            color={transaction.type === 2 ? \"textPrimary\" : \"textSecondary\"}\n          >\n            {maxTipFeePerGasDisplay}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Max Fee (per Gas)</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography\n            color={transaction.type === 2 ? \"textPrimary\" : \"textSecondary\"}\n          >\n            {maxFeePerGasDisplay}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as ethers from \"ethers\";\n\nimport { middleEllipsis } from \"./utils/utils\";\nimport Title from \"./Title\";\n\nexport default function TransactionDetailCard({ transaction }) {\n  if (typeof transaction === \"undefined\") {\n    return <></>;\n  }\n  const theme = useTheme();\n\n  const valueDisplay =\n    ethers.FixedNumber.from(ethers.utils.formatEther(transaction.value)).round(\n      6\n    ) + \" ETH\";\n\n  return (\n    <>\n      <Title>Transaction Details</Title>\n      <Grid\n        container\n        spacing={0}\n        textoverflow=\"ellipsis\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Hash</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {middleEllipsis(transaction.hash)}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Txn Index</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {transaction.transactionIndex}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Txn Type</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          {transaction.type === 2 ? (\n            <Typography\n              noWrap\n              color=\"textPrimary\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              {transaction.type + \" (EIP 1559)\"}\n            </Typography>\n          ) : (\n            <Typography noWrap color=\"textPrimary\">\n              {transaction.type + \" (Legacy)\"}\n            </Typography>\n          )}\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Block Number</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            <Link\n              component={RouterLink}\n              to={`/block/${transaction.blockNumber}`}\n            >\n              {transaction.blockNumber}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">From</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            <Link component={RouterLink} to={`/account/${transaction.from}`}>\n              {middleEllipsis(transaction.from)}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">To</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            <Link component={RouterLink} to={`/account/${transaction.to}`}>\n              {middleEllipsis(transaction.to)}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Contract Addr</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography\n            noWrap\n            color={\n              transaction.contractAddress ? \"textPrimary\" : \"textSecondary\"\n            }\n          >\n            {(transaction.contractAddress && (\n              <Link\n                component={RouterLink}\n                to={`/account/${transaction.contractAddress}`}\n              >\n                {middleEllipsis(transaction.contractAddress)}\n              </Link>\n            )) ||\n              \"N/A\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Value</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {valueDisplay}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Nonce</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {transaction.nonce}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Confirmations</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography noWrap color=\"textPrimary\">\n            {transaction.confirmations}\n          </Typography>\n        </Grid>\n      </Grid>\n      <hr className=\"MuiDivider-root\" style={{ margin: \"10px 0px\" }} />\n      <Grid\n        container\n        spacing={0}\n        textoverflow=\"ellipsis\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <Grid item xs={6}>\n          <Typography color=\"textSecondary\">Status</Typography>\n        </Grid>\n        <Grid item xs={6} container justifyContent=\"flex-end\">\n          <Typography\n            style={\n              transaction.status === 0\n                ? {\n                    color: theme.palette.error.dark,\n                    fontWeight: \"bold\",\n                  }\n                : transaction.status === 1\n                ? {\n                    color: theme.palette.success.dark,\n                    fontWeight: \"bold\",\n                  }\n                : {}\n            }\n          >\n            {transaction.status === 0\n              ? \"Failure\"\n              : transaction.status === 1\n              ? \"Success\"\n              : transaction.status}\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport FeeInfo from \"./FeeInfo\";\nimport GasInfo from \"./GasInfo\";\nimport TransactionDetailCard from \"./TransactionDetailCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 360,\n  },\n}));\n\nexport default function Transaction(props) {\n  const { provider } = props;\n  const { txnHash } = useParams();\n\n  const classes = useStyles(props);\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const [block, setBlock] = useState(undefined);\n  const [transaction, setTransaction] = useState(undefined);\n\n  useEffect(async () => {\n    const fetchTransaction = async () => {\n      const transactionPromises = [];\n\n      transactionPromises.push(provider.getTransaction(txnHash));\n      transactionPromises.push(provider.getTransactionReceipt(txnHash));\n\n      const transactionInfo = await Promise.all(transactionPromises);\n\n      const _transaction = { ...transactionInfo[0], ...transactionInfo[1] };\n\n      setTransaction(_transaction);\n      setBlock(await provider.getBlock(_transaction.blockNumber));\n    };\n\n    fetchTransaction();\n  }, [provider]);\n\n  if (typeof transaction === \"undefined\" || typeof block === \"undefined\") {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={4} md={4} lg={4}>\n          <Paper className={fixedHeightPaper}>\n            <TransactionDetailCard transaction={transaction} block={block} />\n          </Paper>\n        </Grid>\n        {/* Gas Info */}\n        <Grid item xs={4} md={4} lg={4}>\n          <Paper className={fixedHeightPaper}>\n            <GasInfo transaction={transaction} block={block} />\n          </Paper>\n        </Grid>\n        <Grid item xs={4} md={4} lg={4}>\n          <Paper className={fixedHeightPaper}>\n            <FeeInfo transaction={transaction} block={block} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","export default class BidirectionalMap {\n  fwdMap = {};\n  revMap = {};\n\n  constructor(map) {\n    this.fwdMap = { ...map };\n    this.revMap = Object.keys(map).reduce(\n      (acc, cur) => ({\n        ...acc,\n        [map[cur]]: cur,\n      }),\n      {}\n    );\n  }\n\n  get(key) {\n    return this.fwdMap[key] || this.revMap[key];\n  }\n\n  entries() {\n    const entries = Object.entries(this.fwdMap);\n\n    return Object.entries(this.fwdMap);\n  }\n}\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport * as ethers from \"ethers\";\n\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Box from \"@material-ui/core/Box\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport Account from \"./Account\";\nimport Block from \"./Block\";\nimport Blocks from \"./Blocks\";\nimport { mainListItems } from \"./listItems\";\nimport Transaction from \"./Transaction\";\n\nimport BidirectionalMap from \"./utils/BidirectionalMap\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"by \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        <strong>\n          <em>jrhite</em>\n        </strong>{\" \"}\n        with &#10084;&#65039; for Chainshot BlockExplorer project\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst chainIdNetworkBiMap = new BidirectionalMap({\n  1: \"Mainnet\",\n  3: \"Ropsten\",\n  4: \"Rinkeby\",\n  5: \"Goerli\",\n  42: \"Kovan\",\n});\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n\n  const [drawerOpen, setDrawerOpen] = useState(true);\n  const [settingsMenuAnchorEl, setSettingsMenuAnchorEl] = React.useState(null);\n  const [provider, setProvider] = useState(\n    new ethers.providers.InfuraProvider(\n      \"homestead\",\n      process.env.REACT_APP_INFURA_PROJECT_ID\n    )\n  );\n  const [networkName, setNetworkName] = useState(\"Mainnet\");\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const handleSettingsMenuClick = (event) => {\n    setSettingsMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleSettingsMenuClose = () => {\n    setSettingsMenuAnchorEl(null);\n  };\n\n  const handleNetworkSelection = (event) => {\n    let _networkName = event.target.innerText;\n\n    setNetworkName(_networkName);\n\n    if (_networkName === \"Mainnet\") {\n      _networkName = \"homestead\";\n    }\n\n    setProvider(\n      new ethers.providers.InfuraProvider(\n        _networkName.toLowerCase(),\n        process.env.REACT_APP_INFURA_PROJECT_ID\n      )\n    );\n\n    handleSettingsMenuClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, drawerOpen && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              drawerOpen && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            {networkName}\n          </Typography>\n          <IconButton\n            aria-controls=\"settings-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleSettingsMenuClick}\n            color=\"inherit\"\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Menu\n            id=\"settings-menu\"\n            anchorEl={settingsMenuAnchorEl}\n            keepMounted\n            open={Boolean(settingsMenuAnchorEl)}\n            onClose={handleSettingsMenuClose}\n            getContentAnchorEl={null}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n            transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          >\n            {chainIdNetworkBiMap.entries().map(([chainId, networkName]) => (\n              <MenuItem key={chainId} onClick={handleNetworkSelection}>\n                {networkName}\n              </MenuItem>\n            ))}\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !drawerOpen && classes.drawerPaperClose\n          ),\n        }}\n        open={drawerOpen}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Switch>\n            <Route exact path=\"/account/:accountAddr\">\n              <Account provider={provider} />\n            </Route>\n            <Route exact path=\"/block/:blockNumber\">\n              <Block provider={provider} />\n            </Route>\n            <Route exact path=\"/transaction/:txnHash\">\n              <Transaction provider={provider} />\n            </Route>\n            <Route exact path=\"/\">\n              <Blocks provider={provider} />\n            </Route>\n          </Switch>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Dashboard from \"./Dashboard\";\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL || \"/\"}>\n      <div className=\"App\">\n        <Dashboard />\n      </div>\n    </Router>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#90caf9\"\n    },\n    secondary: {\n      main: \"#f48fb1\"\n    },\n    error: {\n      main: red.A400\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n\n"],"sourceRoot":""}